@using LaConcordia.DTO

@if (visible)
{
    <div class="modal fade show d-block" style="background-color: rgba(0,0,0,0.5);" @onclick="Cerrar">
        <div class="modal-dialog modal-lg" @onclick:stopPropagation="true" style="max-width: 900px;">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Beneficiarios - @cedulaActual</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <!-- Tabla beneficiarios -->
                        <div class="col-md-7" style="max-height: 400px; overflow-y: auto;">
                            @if (beneficiarios == null)
                            {
                                <div class="text-center">
                                    <strong>Cargando datos...</strong>
                                    <div class="progress mt-2" style="height: 20px;">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-success" role="progressbar" style="width: 100%"></div>
                                    </div>
                                </div>

                            }
                            else if (!beneficiarios.Any())
                            {
                                <p3>No se encontraron beneficiarios.</p3>
                            }
                            else
                            {
                                <table class="table table-striped table-sm">
                                    <thead>
                                        <tr>
                                            <th>Cédula</th>
                                            <th>Parentesco</th>
                                            <th>Nombres</th>
                                            <th>Apellidos</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var b in beneficiarios)
                                        {
                                            <tr style="cursor:pointer"
                                                class="@(b == beneficiarioSeleccionado ? "table-primary" : "")"
                                                @onclick="() => SeleccionarBeneficiario(b)">
                                                <td>@b.CiBeneficiario</td>
                                                <td>@b.Pkparentesco</td>
                                                <td>@b.Nombres</td>
                                                <td>@b.Apellidos</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>

                                <!-- Paginación -->
                                <nav>
                                    <ul class="pagination pagination-sm justify-content-center">
                                        <li class="page-item @(paginaActual == 1 ? "disabled" : "")">
                                            <button class="page-link" @onclick="() => CambiarPagina(paginaActual - 1)">Anterior</button>
                                        </li>
                                        <li class="page-item disabled">
                                            <span class="page-link">@paginaActual / @totalPaginas</span>
                                        </li>
                                        <li class="page-item @(paginaActual == totalPaginas ? "disabled" : "")">
                                            <button class="page-link" @onclick="() => CambiarPagina(paginaActual + 1)">Siguiente</button>
                                        </li>
                                    </ul>
                                </nav>
                            }
                        </div>

                        <!-- Detalle beneficiario y edición -->
                        <div class="col-md-5 border-start ps-3">
                            <h6>Detalle Beneficiario</h6>
                            <EditForm Model="beneficiarioSeleccionado" OnValidSubmit="GuardarBeneficiario">
                                <DataAnnotationsValidator />
                                <ValidationSummary />

                                <div class="mb-3">
                                    <label class="form-label">Cédula Afiliado</label>
                                    <InputText class="form-control"
                                               @bind-Value="beneficiarioSeleccionado.CiAfiliado"
                                               readonly />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Cédula Beneficiario</label>
                                    <InputText class="form-control" @bind-Value="beneficiarioSeleccionado.CiBeneficiario" disabled="@soloLectura" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Parentesco</label>
                                    <InputSelect TValue="int?" class="form-select" @bind-Value="beneficiarioSeleccionado.Pkparentesco" disabled="@soloLectura">
                                        <option value="">-- Seleccione Parentesco --</option>
                                        @foreach (var p in Parentesco)
                                        {
                                            <option value="@p.Idparentesco">@p.Parentesco1</option>
                                        }
                                    </InputSelect>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Nombres</label>
                                    <InputText class="form-control" @bind-Value="beneficiarioSeleccionado.Nombres" disabled="@soloLectura" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Apellidos</label>
                                    <InputText class="form-control" @bind-Value="beneficiarioSeleccionado.Apellidos" disabled="@soloLectura" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Teléfono</label>
                                    <InputText class="form-control" @bind-Value="beneficiarioSeleccionado.Telefono" disabled="@soloLectura" />
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Tipo Mortuoria</label>
                                    <select class="form-select" @bind="beneficiarioSeleccionado.Tipo" disabled="@soloLectura">
                                        <option value="">-- Seleccione --</option>
                                        <option value=1>BENEFICIARIO</option>
                                        <option value=2>AYUDA</option>
                                    </select>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Estado</label>
                                    <select class="form-select" @bind="beneficiarioSeleccionado.Estado" disabled="@soloLectura">
                                        <option value="">-- Seleccione --</option>
                                        <option value="a">Activo</option>
                                        <option value="p">Pasivo</option>
                                    </select>
                                </div>

                                @if (!soloLectura)
                                {
                                    <button type="submit" class="btn btn-primary" disabled="@guardando">
                                        @if (guardando)
                                        {
                                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true">Guardando...</span>
                                            
                                                }
                                        else
                                        {
                                            <span>Guardar</span>
                                        }
                                    </button>
                                }
                            </EditForm>

                            <button class="btn btn-success mt-3" @onclick="NuevoBeneficiario">Nuevo Beneficiario</button>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="Cerrar">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Inject] private LaConcordia.Interface.ISegurovidum seguroVidaRepo { get; set; }
    [Parameter]
    public List<ParentescoDTO> Parentesco { get; set; } = new();

    private bool visible = false;
    private string cedulaActual = string.Empty;
    private List<SegurovidumDTO> beneficiarios;
    private SegurovidumDTO beneficiarioSeleccionado = new();
    private bool soloLectura = true;
    private bool guardando = false;

    private int paginaActual = 1;
    private int pageSize = 10;
    private int totalItems = 0;
    private int totalPaginas => (int)Math.Ceiling((double)totalItems / pageSize);

    public async Task Show(string cedula)
    {
        cedulaActual = cedula;
        visible = true;
        beneficiarios = null;
        beneficiarioSeleccionado = new SegurovidumDTO();
        soloLectura = true;
        paginaActual = 1;
        await CargarBeneficiarios();
        await InvokeAsync(StateHasChanged);
    }

    private async Task CargarBeneficiarios()
    {
        var resultado = await seguroVidaRepo.GetSegurovidumPaginadosByCedulaAfiliado(paginaActual, pageSize, cedulaActual);
        beneficiarios = resultado.Items;
        totalItems = resultado.TotalItems;
    }

    private async Task CambiarPagina(int nuevaPagina)
    {
        if (nuevaPagina < 1 || nuevaPagina > totalPaginas)
            return;

        paginaActual = nuevaPagina;
        await CargarBeneficiarios();
    }

    private void Cerrar()
    {
        visible = false;
        beneficiarios = null;
        beneficiarioSeleccionado = new SegurovidumDTO();
        StateHasChanged();
    }

    private void SeleccionarBeneficiario(SegurovidumDTO beneficiario)
    {
        beneficiarioSeleccionado = beneficiario;
        soloLectura = true;
    }

    private void NuevoBeneficiario()
    {
        beneficiarioSeleccionado = new SegurovidumDTO
            {
                CiBeneficiario = string.Empty,
                Pkparentesco = null,
                Nombres = string.Empty,
                Apellidos = string.Empty,
                CiAfiliado = cedulaActual

            };
        soloLectura = false;
    }

    private async Task GuardarBeneficiario()
{
    if (guardando) return;

    try
    {
        guardando = true;

        if (string.IsNullOrWhiteSpace(beneficiarioSeleccionado.CiBeneficiario))
        {
            // Aquí puedes mostrar un mensaje de validación
            guardando = false;
            return;
        }

        // Siempre forzar el valor correcto antes de guardar
        beneficiarioSeleccionado.CiAfiliado = cedulaActual;

        bool existe = beneficiarios?.Any(b => b.CiBeneficiario == beneficiarioSeleccionado.CiBeneficiario) ?? false;

        if (existe)
        {
            await seguroVidaRepo.UpdateSegurovidum(beneficiarioSeleccionado);
        }
        else
        {
            await seguroVidaRepo.InsertSegurovidum(beneficiarioSeleccionado);
        }

        await CargarBeneficiarios();

        soloLectura = true;
        guardando = false;
        StateHasChanged();
    }
    catch (Exception ex)
    {
        guardando = false;
        Console.Error.WriteLine($"Error al guardar beneficiario: {ex.Message}");
        // Aquí puedes mostrar un mensaje de error al usuario
    }
}

}
